import B.PHOAS.Basic
import Extra.Prettifier
-- def plus : Term :=
--   .lambda Œª x => .lambda Œª y => .add (.var x) (.var y)

namespace B.PHOAS

partial def Term.pretty : Term String ‚Üí Nat ‚Üí Std.Format
  | .var v => Œª _ => v
  | .int n => Œª _ => toString n
  | .bool x => Œª _ => toString x
  | .‚Ñ§ => Œª _ => "‚Ñ§"
  | .ùîπ => Œª _ => "ùîπ"
  | .and x y => ¬´infixl¬ª Term.pretty 40 "‚àß·¥Æ" x y
  | .eq x y => ¬´infix¬ª Term.pretty 40 "=·¥Æ" x y
  | .mem x S => ¬´infixl¬ª Term.pretty 120 "‚àà·¥Æ" x S
  | .pfun A B => ¬´infixr¬ª Term.pretty 125 "‚á∏·¥Æ" A B
  | .le x y => ¬´infixl¬ª Term.pretty 160 "‚â§·¥Æ" x y
  | .inter x y => ¬´infixl¬ª Term.pretty 160 "‚à©·¥Æ" x y
  | .union x y => ¬´infixl¬ª Term.pretty 160 "‚à™·¥Æ" x y
  | .maplet x y => ¬´infixl¬ª Term.pretty 160 "‚Ü¶·¥Æ" x y
  | .add x y => ¬´infixl¬ª Term.pretty 180 "+·¥Æ" x y
  | .sub x y => ¬´infixl¬ª Term.pretty 180 "-·¥Æ" x y
  | .mul x y => ¬´infixl¬ª Term.pretty 190 "*·¥Æ" x y
  | .cprod x y => ¬´infixl¬ª Term.pretty 190 "‚®Ø·¥Æ" x y
  | .not x => ¬´prefix¬ª Term.pretty 250 "¬¨·¥Æ" x
  | @Term.all _ n D P =>
    let x (j : Fin n) := s!"ùê±{j.val.toSubscriptString}"
    let vars := ", ".intercalate (List.range n |>.attach.map (Œª ‚ü®i, hi‚ü© => x ‚ü®i, List.mem_range.mp hi‚ü©))
    binder Term.pretty 0 "‚àÄ·¥Æ " vars " ‚àà·¥Æ " D ". " (P x) ""
  | @Term.collect _ n D P =>
    let x (j : Fin n) := s!"ùê±{j.val.toSubscriptString}"
    let vars := ", ".intercalate (List.range n |>.attach.map (Œª ‚ü®i, hi‚ü© => x ‚ü®i, List.mem_range.mp hi‚ü©))
    binder Term.pretty 250 "{ " vars " ‚àà·¥Æ " D " | " (P x) " }"
  | @Term.lambda _ n D P =>
    let x (j : Fin n) := s!"ùê±{j.val.toSubscriptString}"
    let vars := ", ".intercalate (List.range n |>.attach.map (Œª ‚ü®i, hi‚ü© => x ‚ü®i, List.mem_range.mp hi‚ü©))
    binder Term.pretty 0 "Œª·¥Æ " vars " ‚àà·¥Æ " D ". " (P x) ""
  | .app f x => Œª _ => Term.pretty f 300 ++ .paren (Term.pretty x 0)
  | .pow S => ¬´prefix¬ª Term.pretty 290 "ùí´ " S
  | .min S => ¬´prefix¬ª Term.pretty 290 "min " S
  | .max S => ¬´prefix¬ª Term.pretty 290 "max " S
  | .card S => Œª _ => "|" ++ Term.pretty S 0 ++ "|·¥Æ"

instance : ToString (Term String) := ‚ü®(Term.pretty ¬∑ 0 |> ToString.toString)‚ü©

end B.PHOAS
